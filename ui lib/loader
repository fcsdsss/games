-- ===================================================================
--      第一步：加载 Night UI 库
--      这行代码会自动下载并运行 Night UI 的最新版本。
-- ===================================================================

loadstring(game:HttpGet("https://raw.githubusercontent.com/null-wtf/Night/refs/heads/main/Night/Loader.luau"))()

-- ===================================================================
--      第二步：等待 UI 库完全加载
--      这是为了确保后续的功能代码可以正常运行。
-- ===================================================================

repeat task.wait() until getgenv().Night and getgenv().Night.Loaded

-- ===================================================================
--      第三步：执行针对 Blade Ball 的功能代码
-- ===================================================================

-- 检查当前游戏是否是 Blade Ball，如果不是则脚本不执行
if game.PlaceId ~= 873703865 then
    getgenv().Night.Assets.Functions.Notify("This script is for Blade Ball only!", 5, "GameError")
    return
end

-- 获取 Night 的核心变量
local Night = getgenv().Night
local Functions = Night.Assets.Functions
local Tabs = Night.Tabs.Tabs

-- 获取游戏服务和本地玩家
local plrs = game:GetService("Players")
local lplr = plrs.LocalPlayer
local originalJumpPower -- 用于保存原始跳跃力

-- 在 "Player" 标签页下创建一个名为 "Infinite Jump" 的新模块
Tabs.Player.Functions.NewModule({
    Name = 'Infinite Jump',
    Description = 'Sets your jump power to a high value.',
    Icon = 'rbxassetid://283442822', -- 一个跳跃图标
    Flag = 'BladeBall_InfJump', -- 为脚本设置一个唯一的标识符
    Callback = function(self, enabled)
        -- 等待玩家角色加载完成
        local character = lplr.Character or lplr.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")

        if enabled then
            -- 当开关打开时
            originalJumpPower = humanoid.JumpPower -- 保存原始的跳跃力
            humanoid.JumpPower = 150 -- 设置一个新的、更高的跳跃力
            Functions.Notify('Infinite Jump: Enabled', 3, "InfJumpStatus")
        else
            -- 当开关关闭时
            if originalJumpPower then
                humanoid.JumpPower = originalJumpPower -- 恢复原始的跳跃力
            end
            Functions.Notify('Infinite Jump: Disabled', 3, "InfJumpStatus")
        end
    end
})

-- 最后，弹出一个通知，告诉用户脚本已成功加载
Functions.Notify('Blade Ball script loaded!', 5, "ScriptLoaded")
