local Config = {
    Enabled = true,
    TeamCheck = true,
    VisibleCheck = true,
    FOV = 120,
    AimPart = "Head",
}

if getgenv().SilentAim then return end

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera
getgenv().SilentAim = { CurrentTarget = nil }

local function isVisible(targetPart)
    local origin = Camera.CFrame.Position
    local direction = targetPart.Position - origin
    local ignoreList = {LocalPlayer.Character}
    local ray = Ray.new(origin, direction.Unit * direction.Magnitude)
    local hitPart, hitPosition = Workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
    if not hitPart or hitPart:IsDescendantOf(targetPart.Parent) then
        return true
    end
    return false
end

local function findBestTarget()
    local bestTarget = nil
    local closestDistance = math.huge
    local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            if Config.TeamCheck and player.Team == LocalPlayer.Team then continue end
            local targetPart = player.Character:FindFirstChild(Config.AimPart)
            if not targetPart then continue end
            local partPos, onScreen = Camera:WorldToViewportPoint(targetPart.Position)
            if onScreen then
                local distance = (Vector2.new(partPos.X, partPos.Y) - screenCenter).Magnitude
                if distance < Config.FOV and distance < closestDistance then
                    if Config.VisibleCheck and not isVisible(targetPart) then continue end
                    closestDistance = distance
                    bestTarget = targetPart
                end
            end
        end
    end
    return bestTarget
end

RunService.RenderStepped:Connect(function()
    if Config.Enabled then
        getgenv().SilentAim.CurrentTarget = findBestTarget()
    else
        getgenv().SilentAim.CurrentTarget = nil
    end
end)

local mt = getrawmetatable(game)
local oldIndex = mt.__index
setreadonly(mt, false)
mt.__index = newcclosure(function(self, key)
    local target = getgenv().SilentAim.CurrentTarget
    if self:IsA("Mouse") and target and Config.Enabled then
        if key == "Hit" then
            return target.CFrame
        elseif key == "Target" then
            return target
        end
    end
    return oldIndex(self, key)
end)
setreadonly(mt, true)
